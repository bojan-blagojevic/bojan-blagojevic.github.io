/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useSpring, animated, config } from '@react-spring/three'

export default function Cubie(
  {
    x = 0,
    y = 0,
    z = 0,
    rx = 0,
    ry = 0,
    rz = 0,
    id,
    onCubieClicked,
    selected
  }) {
  const { nodes, materials } = useGLTF("/cubie.glb");

  const { scale } = useSpring({
    scale: selected ? 1.1 : 1,
    config: config.wobbly
  })

  const { rotX, rotY, rotZ } = useSpring({
    rotX: rx,
    rotY: ry,
    rotZ: rz,
    config: config.wobbly
  })

  //console.log("Draw cubie:" + id + " sel:" + selected)
  return (
    <animated.mesh
      scale={scale}
      onClick={e => {
        e.stopPropagation();
        onCubieClicked();
      }}
      rotation-x={rotX}
      rotation-y={rotY}
      rotation-z={rotZ}
      castShadow
      receiveShadow
    >
      <group // initial position
        position-x={x}
        position-y={y}
        position-z={z}
      >
        <mesh
          geometry={nodes.Frame.geometry}
          material={materials.BLACK}
        />
        <mesh
          geometry={nodes.Red.geometry}
          material={materials.RED}
        />
        <mesh
          geometry={nodes.Blue.geometry}
          material={materials.BLUE}
        />
        <mesh
          geometry={nodes.Yellow.geometry}
          material={materials.YELLOW}
        />
        <mesh
          geometry={nodes.White.geometry}
          material={materials.WHITE}
        />
        <mesh
          geometry={nodes.Green.geometry}
          material={materials.GREEN}
        />
        <mesh
          geometry={nodes.Pink.geometry}
          material={materials.PINK}
        />
      </group>
    </animated.mesh>
  );
}

useGLTF.preload("/cubie.glb");